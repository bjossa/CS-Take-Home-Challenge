<Window x:Class="CS_Take_Home_Challenge.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CS_Take_Home_Challenge"
        mc:Ignorable="d"
        Title="MainWindow"
        Background="#FF001527">
    <Window.Resources>
        <!-- edit the default button template-->
        <ControlTemplate x:Key="ButtonBaseControlTemplate1" TargetType="{x:Type ButtonBase}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <local:PersonValueConverter x:Key="IsActiveToForegroundColourConv"/>
        <local:VisibilityConverter x:Key="HaveLoadedPeopleToVisibilityConverter"/>

        <DataTemplate x:Key="PeopleHeaderTemplate">
            <TextBlock Grid.Column="0" Width="300" Height="30" Text="{Binding}" local:SortPeopleBehaviour.SortColumnHeader="True" TextAlignment="Center" Background="#FF293A54" Foreground="AntiqueWhite" FontSize="17"/>
        </DataTemplate>

        <Style x:Key="VisibleIfHaveLoadedPeople" TargetType="FrameworkElement">
            <Setter Property="Visibility">
                <Setter.Value>
                    <Binding Path="HaveLoadedPeople" Mode="OneWay" Converter="{StaticResource HaveLoadedPeopleToVisibilityConverter}"/>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="AntiqueWhite"/>
            <Setter Property="Template" Value="{StaticResource ButtonBaseControlTemplate1}"/>
            <Setter Property="FontSize" Value="17"/>
            <Setter Property="Height"  Value="30"/>
            <Setter Property="Width"  Value="100"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Background" Value="Navy"/>
        </Style>

        <Style TargetType="{x:Type TextBlock}" x:Key="PersonDataTextBlockStyle">
            <Setter Property="Width" Value="300"/>
            <Setter Property="Height" Value="50"/>
            <Setter Property="Foreground" Value="{Binding IsActive, Converter={StaticResource IsActiveToForegroundColourConv}}"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Background" Value="#FF001527"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="FontSize" Value="15"/>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>

        <!-- edit the default textbox style-->
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="5">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

    </Window.Resources>
    
    <DockPanel HorizontalAlignment="Center">
        <!-- input button and text field for filePath-->
        <StackPanel Orientation="Horizontal" DockPanel.Dock="Top" HorizontalAlignment="Center">
            <TextBox x:Name="FilePathInputTextBox" Width="300" Height="30" Text="Enter filePath here" Margin="5" BorderThickness="2" FontSize="15" Background="#FF293A54" Foreground="White"/>
            <Button Content="Submit" Width="250" Height="30" Command="{Binding InputFilePathCommand}" CommandParameter="{Binding ElementName=FilePathInputTextBox, Path=Text}" Margin="5"/>
        </StackPanel>

        <!-- display the buttons for editing the list of people-->
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" Style="{StaticResource VisibleIfHaveLoadedPeople}" HorizontalAlignment="Center">
            <StackPanel.Resources>
                <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                    <Setter Property="Width" Value="250"/>
                    <Setter Property="Height" Value="30"/>
                    <Setter Property="Margin" Value="5"/>
                </Style>
            </StackPanel.Resources>
            <Button Content="Add Person" Command="{Binding DisplayAddPersonDialogueCommand}"/>
            <Button Content="Edit Person" Command="{Binding DisplayEditPersonDialogueCommand}"/>
            <Button Content="Remove Person" Command="{Binding RemovePersonCommand}"/>
        </StackPanel>

        <!-- display the list of People -->
        <ListView ItemsSource="{Binding Path=PersonListVM.People, Mode=OneWay}"
                  SelectionMode="Single"
                  SelectedItem="{Binding Path=SelectedPerson, Mode=TwoWay}"
                  Style="{StaticResource VisibleIfHaveLoadedPeople}"
                  Background="#FF001527"
                  HorizontalContentAlignment="Center"
                  Height="640"
                 >
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>

                    <GridViewColumn Width="300"
                                    Header="Name"
                                    HeaderTemplate="{StaticResource PeopleHeaderTemplate}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Grid.Column="0" Text="{Binding Path=Name, Mode=TwoWay}" Style="{StaticResource PersonDataTextBlockStyle}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>

                    </GridViewColumn>

                    <GridViewColumn Width="300"
                                    Header="Address"
                                    HeaderTemplate="{StaticResource PeopleHeaderTemplate}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Grid.Column="1" Text="{Binding Path=Address, Mode=TwoWay}" Style="{StaticResource PersonDataTextBlockStyle}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>

                    </GridViewColumn>

                    <GridViewColumn Width="300"
                                    Header="Phone"
                                    HeaderTemplate="{StaticResource PeopleHeaderTemplate}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Grid.Column="2" Text="{Binding Path=Phone, Mode=TwoWay}" Style="{StaticResource PersonDataTextBlockStyle}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>

            </ListView.View>

        </ListView>
    </DockPanel>


</Window>
