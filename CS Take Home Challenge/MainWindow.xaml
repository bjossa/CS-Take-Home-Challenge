<Window x:Class="CS_Take_Home_Challenge.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CS_Take_Home_Challenge"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">

    <Window.Resources>
        <local:PersonValueConverter x:Key="IsActiveToForegroundColourConv"/>
    </Window.Resources>

    <StackPanel Orientation="Vertical">
        <StackPanel Orientation="Horizontal">
            <TextBox x:Name="FilePathInputTextBox" Width="300" Height="100" Text="Enter filePath here"/>
            <Button Content="Submit" Width="300" Height="100" Command="{Binding InputFilePathCommand}" CommandParameter="{Binding ElementName=FilePathInputTextBox, Path=Text}"/>
        </StackPanel>
        <Button x:Name="ShowPeopleButton" Width="100" Height="100" Content="Show People" Command="{Binding ShowPeopleCommand}"/>

        <Grid Height="30" Width="800">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
				<ColumnDefinition Width="*"/>
			</Grid.ColumnDefinitions>
			
            <TextBlock Grid.Column="0" Width="100" Height="30" Text="Name" />
			<TextBlock Grid.Column="1" Width="100" Height="30" Text="Address" />
			<TextBlock Grid.Column="2" Width="100" Height="30" Text="Phone" />
		</Grid>

        <!-- Display People as a stackpanel -->
		<ListBox ItemsSource="{Binding Path=People, Mode=OneWay}"
				 Visibility="{Binding ArePeopleVisible, Mode=OneWay}"
                 x:Name="PeopleListBox">
			
            <ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel Orientation="Vertical" HorizontalAlignment="Center"/>
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>
			
            <ListBox.ItemTemplate>
				<DataTemplate>
					<Grid Width="800">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <!-- todo: add a submit button so that a user can edit a person without submitting the changes right away, and also they can cancel the changes they were going to make with a cancel button. idea: Have something
                        in the button that the textboxes are listening to, and when you submit, that things changes, and then this triggers an event in the textbox for it to forward the info in its text to the bound property.
                        upon clicking cancel, you would just update the textboxes with what's currently in the model, since that hasn't changed, and change the editability of the textboxes back to false.-->
                        <!-- If a person is not active, can they be edited??-->
                        <!-- for now we have that the button inherits the data context from the ListBox-->
                        <!-- todo: can we send a command directly to the textboxes so that the EditPersonCommand doesn't even need to exist at all?-->
                        <Button Content="Edit" Height="50" Grid.Column="0" Command="{Binding ChangePersonEditabilityCommand}"/>
                        <!-- todo: make this change from a textblock to a textbox when a user hits the edit button. The content of this control is fed to a converter which takes in the editability and spits out a textblock or textbox appropriately.-->
                        <TextBox Width="100" Height="50" Grid.Column="1" Text="{Binding Path=Name, Mode=TwoWay}" IsReadOnly="{Binding Path=IsReadOnly}"
                                   Foreground="{Binding IsActive, Converter={StaticResource IsActiveToForegroundColourConv}}"/>
                        <TextBox Width="100" Height="50" Grid.Column="2" Text="{Binding Path=Address, Mode=TwoWay}" IsReadOnly="{Binding Path=IsReadOnly}"
                               Foreground="{Binding IsActive, Converter={StaticResource IsActiveToForegroundColourConv}}"/>
                        <TextBox Width="100" Height="50" Grid.Column="3" Text="{Binding Path=Phone, Mode=TwoWay}" IsReadOnly="{Binding Path=IsReadOnly}"
                               Foreground="{Binding IsActive, Converter={StaticResource IsActiveToForegroundColourConv}}"/>
					</Grid>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>

	</StackPanel>


</Window>
